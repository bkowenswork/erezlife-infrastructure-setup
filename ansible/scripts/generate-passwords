#!/usr/bin/env python3

"""
Generate passwords, tokens, secrets

You should only need to run this once per host being provisioned.
It will write to:
    host_vars/<hostname.erezlife.com>/passwords.yml

"""

import argparse
import json
import random
import string
import subprocess
import tempfile
from pathlib import Path

import yaml

password_length = 16
token_length = 64
key_length = 50


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--inventory", required=True)
    return parser.parse_args()


def _token(length):
    chars = string.ascii_letters + string.digits
    return "".join(random.choice(chars) for _ in range(length))


def create_web_passwords():
    return {
        "erezadmin_auth_token": _token(token_length),
        "erezadmin_broker_password": _token(password_length),
        "erezadmin_secret_key": _token(key_length),
        "erezlife_github_webhook_secret": _token(key_length),
        "saml_admin_password": _token(password_length),
        "saml_cron_key": _token(key_length),
        "saml_default_secretsalt": _token(password_length),
    }


def write_password_file(path, passwords):
    try:
        path.mkdir()
    except FileExistsError:
        pass

    path = path / "passwords.yml"

    try:
        fp = open(path)
    except FileNotFoundError:
        pass
    else:
        with fp:
            # Keep existing passwords.
            passwords.update(yaml.safe_load(fp))

    with open(path, "w") as fp:
        yaml.safe_dump(passwords, fp, default_flow_style=False, explicit_start=True)


def get_group_hostname_from_inventory(inventory):
    with tempfile.NamedTemporaryFile() as f:
        subprocess.run(
            [
                "venv/bin/ansible-inventory",
                "-i",
                inventory,
                "--list",
                "--output",
                f.name
            ],
            check=True,
        )
        json_inventory = json.load(f)

    for group_name in json_inventory:
        if group_name.endswith("_web"):
            hosts = json_inventory[group_name]["hosts"]
            for host in hosts:
                group, _ = group_name.split("_")
                yield group, host


def main():
    args = parse_args()
    common_passwords = {"jenkins_erezlife_deploy_pr_token": _token(key_length)}
    write_password_file(Path("group_vars"), common_passwords)
    for group, hostname in get_group_hostname_from_inventory(args.inventory):
        web_pass = create_web_passwords()
        write_password_file(Path("host_vars") / hostname, web_pass)


if __name__ == "__main__":
    main()
